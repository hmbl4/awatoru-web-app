{% extends "_layout" %}

{% requireLogin %}

{% block content %}
{% set products = craft.entries.section('products') %}


{% include '_snippets/header-block' with
    {
      title: "Order Form",
      description:"Order using the form below"
    }
%}

{# receipt? #}


<form method="post" id="form" action="" accept-charset="UTF-8">
    {{ csrfInput() }}
    <input type="hidden" name="action" value="contact-form/send">
    {{ redirectInput('order/thanks') }}
    <div class="row">
      <div class="col-md-6">
        <div class="form-group">
          <label for="from-name">Name</label>
          <input id="from-name" type="text" class="form-control" name="fromName" value="{{ currentUser.name ?? '' }}">
          <p class="error-fromName error error-hidden">Your Name cannot be blank</p>
        </div>
      </div>

      <div class="col-md-6">
        <div class="form-group">
          <label for="from-email">Email</label>
          <input id="from-email" type="email" class="form-control" name="fromEmail" value="{{ currentUser.email ?? '' }}">
          <p class="error-fromEmail error error-hidden">Your Email cannot be blank.</p>
        </div>
      </div>

      <div class="col-md-12">
        <div class="form-group">
          <label for="message">Message / Requests</label>
          <textarea rows="2" cols="100%"  class="form-control" id="message" name="message">{{ message.message ?? '' }}</textarea>
          <p class="error-message error error-hidden">Your Message cannot be blank</p>
        </div>
      </div>
    </div>

    <input id="form-type" type="hidden" name="OrderForm" value="Order Form">

    <label for="available-products">Products requested:</label>
    <input id="products-requested" type="hidden" name="message[products]" value="">

    <ul>
      {% for product in products %}
        <li style="list-style-type: none;margin-left:-1rem;">

          {% set rawParams = craft.request.getParam('pdts') %}
          {% set rawParamsSplit = rawParams|split(',') %}
          {% set hasCheckbox = false %}
          {% for item in rawParamsSplit %}
            {% set itemFormatted = item|replace({'+': " "}) %}
            {% if itemFormatted|lower == product.productName|lower %}
              {% set hasCheckbox = true %}
            {% endif %}
          {% endfor %}
        {% if hasCheckbox %}
          <input type="checkbox" name="checked-product-{{loop.index}}" class="product-checkbox" data-val="{{ product.productName }}" checked>
        {% else %}
          <input type="checkbox" name="checked-product-{{loop.index}}" class="product-checkbox" data-val="{{ product.productName }}">
        {% endif %}

          <label for="product-check-{{loop.index}}" class="feed__box__product__outer--name mt-0">{{ product.productName }}</label>
        </li>
      {% endfor %}
    </ul>
    <p class="error-fromEmail error error-hidden">Your product selection cannot be blank.</p>

    {# <div class="alert alert-success thanks" role="alert">Sent successfully! We will be in touch, thanks.</div> #}

    <input type="submit" class="btn btn-purchase" value="Order Now">
</form>


    <script type="text/javascript">

    $( document ).ready(function() {
      console.log( "ready!" );
      updateCheckboxes()
      // $('#form').submit(function(event) {
      //     event.preventDefault();
      //     console.log("preventDefault!");
      //     $('.error').slideUp();
      //     $.post({
      //         url: '/',
      //         dataType: 'json',
      //         data: $(this).serialize(),
      //         success: function(response) {
      //             console.log(response)
      //             if (response.success) {
      //                 console.log("Worked.");
      //                 $('.thanks').fadeIn();
      //                 $('#form').submit();
      //             } else {
      //                 $('.thanks').fadeOut();
      //                 console.log("Didn't work.");
      //                 $('.error').slideUp();
      //                 for (i in response.errors) {
      //                   var className = '.error-'+i
      //                   console.log(className);
      //                   $(className).slideDown();
      //                 }
      //             }
      //         },
      //         failure: function(result){
      //             console.log("FAILED");
      //             console.log(result);
      //         }
      //     });
      //   });

        $(".product-checkbox").on('change',function(event){
          updateCheckboxes()
          console.log( "change!" );
        });

        function updateCheckboxes() {
          var productList = []
          $(".product-checkbox").each(function(){
            if ($(this).is(':checked') ) {
              productList.push( $(this).data('val') );
            }
          })
          console.log(productList)
          $('#products-requested').val(productList)
        }
      });


    </script>


{% endblock %}
